[project]
name = "aworld-runtime"
version = "0.1.0"
description = "Scaling Agent Training via Runtime Definitions and Parallelizations"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiofiles>=24.1.0",
    "aiohttp>=3.12.14",
    "arxiv>=2.2.0",
    "browser-use>=0.5.3",
    "chardet>=5.2.0",
    "dotenv>=0.9.9",
    "fastapi>=0.116.0",
    "fastmcp>=2.10.4",
    "langchain-openai>=0.3.27",
    "markdown>=3.8.2",
    "mcp[cli]>=1.11.0",
    "numpy>=2.3.1",
    "opencv-python>=4.11.0.86",
    "openpyxl>=3.1.5",
    "pandas>=2.3.1",
    "pillow>=11.3.0",
    "pydantic>=2.11.7",
    "pygame>=2.6.1",
    "pytesseract>=0.3.13",
    "python-docx>=1.2.0",
    "python-magic>=0.4.27",
    "python-pptx>=1.0.2",
    "selenium>=4.34.2",
    "typer>=0.16.0",
    "waybackpy>=3.0.6",
    "wikipedia>=1.4.0",
    "youtube-transcript-api>=1.1.1",
]

[project.scripts]
aworld-runtime = "aworld_runtime.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["aworld_runtime"]
include = [
    "aworld_runtime/**/*.py",
    "aworld_runtime/**/*.yml",
    "aworld_runtime/**/*.yaml",
    "aworld_runtime/**/*.json",
    "aworld_runtime/**/*.md",
]
exclude = [
    "aworld_runtime/**/__pycache__",
    "aworld_runtime/**/*.pyc",
    "aworld_runtime/**/.*",
]
[tool.uv]
dev-dependencies = [
    "anyio>=4.4.0",
    "black>=24.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "uv>=0.3.0",
]

[[tool.uv.index]]
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple"
default = true

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
line-length = 88
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m `not slow`')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"
